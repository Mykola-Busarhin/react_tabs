{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","className","map","tab","classNames","id","href","onClick","handleTabClick","title","content","App","useState","newTab","setNewTab","find","ReactDOM","render","document","getElementById"],"mappings":"kNAgBaA,EAAwB,SAAC,GAK/B,IAJLC,EAII,EAJJA,KACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,YAQA,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAAAC,GAAG,OACX,oBACE,UAAQ,MAERF,UAAWG,IAAW,CAAE,YAAaD,EAAIE,KAAOL,EAAYK,KAH9D,SAKE,mBACEC,KAAI,WAAMH,EAAIE,IACd,UAAQ,UACRE,QAAS,kBAnBA,SAACJ,GAClBA,EAAIE,KAAOP,GACbC,EAAcI,GAiBWK,CAAeL,IAHhC,SAKGA,EAAIM,SARFN,EAAIE,WAejB,qBAAKJ,UAAU,QAAQ,UAAQ,cAA/B,SACGD,EAAYU,cC7CRb,EAAO,CAClB,CAAEQ,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,eACxC,CAAEL,GAAI,QAASI,MAAO,QAASC,QAAS,gBAS7BC,EAAgB,WAC3B,MAA4BC,mBAASf,EAAK,IAA1C,mBAAOgB,EAAP,KAAeC,EAAf,KAMMd,EAAcH,EAAKkB,MAAK,SAAAZ,GAAG,OAAIA,EAAIE,KAAOQ,EAAOR,OAAOR,EAAK,GAEnE,OACE,sBAAKI,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBY,EAAOJ,SAE7B,cAAC,EAAD,CACEZ,KAAMA,EACNE,cAbY,SAACI,GACjBW,EAAUX,IAaNL,cAAee,EAAOR,GACtBL,YAAaA,QCjCrBgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4064c8b0.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void;\n  selectedTab: Tab;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n  selectedTab,\n}) => {\n  const handleTabClick = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={classNames({ 'is-active': tab.id === selectedTab.id })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleTabClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string;\n  title: string;\n  content: string;\n}\n\nexport const App: React.FC = () => {\n  const [newTab, setNewTab] = useState(tabs[0]);\n\n  const changeTab = (tab: Tab) => {\n    setNewTab(tab);\n  };\n\n  const selectedTab = tabs.find(tab => tab.id === newTab.id) || tabs[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${newTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        onTabSelected={changeTab}\n        selectedTabId={newTab.id}\n        selectedTab={selectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}